@page "/ordem/{OrdemId}"

@inject ISessaoUsuario sessao
@inject IUsuarioEndpoints usuarioEndpoints
@inject IOrdemEndpoints ordemEndpoints
@inject NavigationManager navManager

@if (inicializado)
{

	<div class="formulario5">
		<div class="text-center my-4 fs-4 fw-bold">Informações da ordem</div>

		<div class="d-flex justify-content-evenly my-2 text-center-middle2 ">

			<div class="d-flex justify-content-evenly align-items-center">


				<div class="photo-info2">

					<div>
						<div class="mb-4 label-principal8"> Ferramenta ultilizada</div>
						<div class="mb-3 text-normal">@OrdemModel!.NomeFerramenta</div>
					</div>
				</div>
			</div>



			<!--sadasiudaskidhas 2-->







			<div>
				<div class="photo-info2 ">
					<div class="mb-4 label-principal8">Horas trabalhadas</div>
					<div class="d-flex justify-content-evenly align-items-center">


						@if (OrdemModel.HorasTrabalhadas is not null)
						{
							<div class="mb4 text-center">

								<div class="mb-3 text-normal">
									@OrdemModel.HorasTrabalhadas h
								</div>
							</div>
						}
					</div>
				</div>
			</div>




			<div>
				<div class="photo-info2">
					<div class="mb-4 label-principal8">Nome do responsávelo</div>
					<div class="d-flex justify-content-evenly align-items-center">



						@if (OrdemModel.NomeResponsavel != string.Empty)
						{
							<div class="mb-3 text-center">

								<div class="text-normal">
									@OrdemModel.NomeResponsavel
								</div>
							</div>
						}

					</div>
				</div>
			</div>



		</div>




		<div class="photo-info">

			<div class=" text-center-middle2">
				<div class="mb-3 label-principal3">Descrição do processo</div>
				<div class="mb-3 text-normal">@OrdemModel.Descricao</div>
			</div>
		</div>


		<!-- siudiausdasijdl-->

		<div>
			<div>



				<div class="d-flex justify-content-evenly my-2 text-center-middle2 ">




					<div class="photo-info2">
						<div class="mb-4 label-principal7">Nível de urgência</div>

						<div class="d-flex justify-content-evenly align-items-center">

							<div>

								@if (OrdemModel.NivelUrgencia == "Urgente")
								{
									<div class="situacao-urgencia-urgente text-color-danger">Urgente</div>
								}
								else
								{
									<div class="situacao-urgencia-normal ">Normal</div>
								}
							</div>
						</div>
					</div>









					<div class="photo-info2">
						<div class="mb-4 label-principal7">Situação da ordem</div>

						<div class="d-flex justify-content-evenly align-items-center">


							<div class="mb-4">

								@if (OrdemModel.Situacao == "Espera")
								{
									<div class="situacao-espera-detalhes">Espera</div>
								}
								else if (OrdemModel.Situacao == "Iniciada")
								{
									<div class="situacao-iniciada-detalhes">Iniciada</div>
								}
								else
								{
									<div class="situacao-finalizada-detalhes">Finalizada</div>

								}
							</div>



						</div>
					</div>
				</div>

			</div>
		</div>







		<div class="photo-info">
			<div class="mb-4 text-center-middle2">
				<div class="mb-4 label-principal3">Data e hora</div>
				<div class="d-flex justify-content-evenly align-items-center">




					<div class="mb-4 text-center">
						<div class="mb-3 text-normal2">Prazo máximo</div>
						<div class="text-normal">
							@OrdemModel.DataPrazoMaximo.ToString("dd/MM/yyyy")
						</div>
					</div>
					<div class="mb-4 text-center">
						<div class="mb-3 text-normal2">Criado em</div>
						<div class="text-normal">
							@OrdemModel.DataCriacao
						</div>
					</div>


					<div class="mb-4 text-center">
						<div class="mb-3 text-normal2">Data inicio</div>
						<div class="text-normal">
							@OrdemModel.DataIniciado
						</div>
					</div>
					<div class="mb-4 text-center">
						<div class="mb-3 text-normal2">Data finalizado</div>
						<div class="text-normal">
							@OrdemModel.DataFinalizado
						</div>
					</div>



				</div>
			</div>
		</div>

















		<div class="photo-info">
			<div class="mb-4 text-center-middle2">
				<div class="mb-4 label-principal3">Descrição do Responsável</div>
				<div class="d-flex justify-content-evenly align-items-center">



					@if (OrdemModel.Situacao == "Finalizada")
					{
						<div>
							<div class="mb-3 text-normal2">Realizou:</div>
							<div class="mb-4 text-normal">@OrdemModel.DescricaoResponsavel</div>
						</div>
					}
				</div>
			</div>
		</div>







		@if (mostrarFinalizarDescricao)
		{
			<div class="text-center">
				<EditForm Model="OrdemModel" OnValidSubmit="FinalizarOrdemMethod" Context="Form">
					<div>
						<div class="text-center my-4 fs-3">Insira uma descrição do trabalho feito.</div>
						<InputTextArea @bind-Value="OrdemModel!.DescricaoResponsavel" class="input"
									   placeholder="Descrição do trabalho" />
					</div>
					<div class="mt-2">
						<button type="submit" class="botao-principal"
								id="botao-padding-ajustes">
							Finalizar
						</button>
					</div>
				</EditForm>
			</div>
		}
		@if (mostrarDeletarDiv)
		{
			<div class="text-center">
				<div class="fs-4 my-4">
					Tem certeza que deseja deletar essa ordem?
				</div>
				<div>
					<button @onclick="Deletar" class="botao-principal">Confirmar</button>
				</div>
			</div>
		}
		<div class="d-flex my-10 justify-content-end align-items-center">
			@if (OrdemModel.Situacao == "Espera")
			{
				<div >
					<a href="/aceitarordem/@OrdemId" class="botao-principal" style="margin-top: 20px; margin-right:30px;">Aceitar ordem</a>
				</div>
			}
			else if (OrdemModel.Situacao == "Iniciada")
			{
				<div class="mb-2">
					<button class="botao-principal" style="margin-top: 20px; margin-right:30px;" @onclick="ToggleMostrarFinalizarDescricao"
							id="botao-principal">
						@toggleFinalizarBotaoNome
					</button>
				</div>
			}

			@if (UsuarioLogadoModel!.Cargo == "Administrador")
			{
				<div class="mb-2">
					<button @onclick="MostrarDelete" class="botao-principal" style="margin-top: 20px;"
							id="botao-principal">
						@mostrarDeletarBotaoNome
					</button>
				</div>
			}
			<div>
				<a href="/ordens" class="botao-principal" style="margin-top: 20px;">Voltar</a>
			</div>
		</div>
	</div>
}

@code {
	[Parameter]
	public string? OrdemId { get; set; }

	private Guid UsuarioLogadoId { get; set; }
	private UsuarioModel? UsuarioLogadoModel { get; set; }
	private OrdemModel? OrdemModel { get; set; }

	private bool inicializado = false;
	private bool mostrarDeletarDiv = false;
	private bool mostrarFinalizarDescricao = false;
	private string mostrarDeletarBotaoNome = "Deletar";
	private string toggleFinalizarBotaoNome = "Finalizar";

	protected async override Task OnInitializedAsync()
	{
		if (OrdemId == Guid.Empty.ToString())
		{
			navManager.NavigateTo("/naoencontrado");
			return;
		}

		await BuscarUsuarioLogadoId();
		if (UsuarioLogadoId == Guid.Empty)
		{
			navManager.NavigateTo("/login");
			return;
		}

		await BuscarUsuarioModel();
		if (UsuarioLogadoModel is null)
		{
			navManager.NavigateTo("/naoencontrado");
			return;
		}

		await BuscarOrdemModel();
		if (OrdemModel is null)
		{
			navManager.NavigateTo("/naoencontrado");
			return;
		}

		inicializado = true;
	}

	private async Task BuscarUsuarioLogadoId()
	{
		UsuarioLogadoId = await sessao.BuscarIdDoUsuarioLogado();
	}
	private async Task BuscarUsuarioModel()
	{
		UsuarioLogadoModel = await usuarioEndpoints.BuscarPorId(UsuarioLogadoId);
	}
	private async Task BuscarOrdemModel()
	{
		OrdemModel = await ordemEndpoints.BuscarPorId(Guid.Parse(OrdemId!));
	}
	private void MostrarDelete()
	{
		if (mostrarDeletarDiv is false)
		{
			mostrarDeletarBotaoNome = "Ocultar";
			mostrarDeletarDiv = true;
			return;
		}

		mostrarDeletarBotaoNome = "Deletar";
		mostrarDeletarDiv = false;
	}

	private void FinalizarOrdemMethod()
	{
		navManager.NavigateTo($"/finalizarordem/{OrdemId}/{OrdemModel!.DescricaoResponsavel}");
	}
	private async Task Deletar()
	{
		await ordemEndpoints.Deletar(Guid.Parse(OrdemId!));
		navManager.NavigateTo("/ordens");
	}
	private void ToggleMostrarFinalizarDescricao()
	{
		if (mostrarFinalizarDescricao is false)
		{
			toggleFinalizarBotaoNome = "Ocultar";
			mostrarFinalizarDescricao = true;
			return;
		}

		mostrarFinalizarDescricao = false;
		toggleFinalizarBotaoNome = "Finalizar";
	}
}
