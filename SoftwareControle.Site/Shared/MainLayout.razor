@inherits LayoutComponentBase

@inject ISessaoUsuario sessao
@inject IUsuarioEndpoints usuarioEndpoints
@inject IJSRuntime JSRuntime

<navbar>

    <div class="d-flex align-items-center">


        <a class="buttonww" data-text="Awesome" href="/" id="anchor">
            <span class="actual-text">&nbsp;FerSage&nbsp;</span>
            <span aria-hidden="true" class="hover-textww">&nbsp;FerSage&nbsp;</span>
        </a>



    </div>
    <AuthorizeView>
        <Authorized>
            <div class="d-flex">
                @if (UsuarioLogadoModel is not null && UsuarioLogadoModel.Cargo == "Administrador")
                {

                    <div>
                        <a class="nav-link" href="/usuarios" id="anchor">Usuarios</a>

                    </div>
                    <div>
                        <a class="nav-link" href="/relatorios" id="anchor">Relatorios</a>
                    </div>
                }
                <div>
                    <a class="nav-link" href="/ferramentas" id="anchor">Ferramentas</a>
                </div>
                <div>
                    <a class="nav-link" href="/ordens" id="anchor">Ordens</a>
                </div>
            </div>
            <div class="nav-links">
                <a class="nav-link" href="/usuario/@context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value" id="anchor">
                    @context.User.FindFirst(ClaimTypes.Name)?.Value
                </a>







                <a href="/logout" class="Btn">
                    <div class="sign">
                        <svg viewBox="0 0 512 512">
                            <path d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9z"></path>
                        </svg>
                    </div>
                    <div class="text">Sair</div>
                </a>



            </div>
        </Authorized>
        <NotAuthorized>
            <a href="/login" class="Btn">
                <div class="sign">
                    <svg viewBox="0 0 512 512">
                        <path d="M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9z"></path>
                    </svg>
                </div>
                <div class="text">Entrar</div>
            </a>
        </NotAuthorized>
    </AuthorizeView>
</navbar>



<div>
    <main>
        <div>
            @Body
        </div>
    </main>
</div>

@code {
    private Guid UsuarioLogadoId { get; set; }
    private UsuarioModel? UsuarioLogadoModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await BuscarUsuarioLogadoId();
        await BuscarUsuarioLogadoModel();
    }

    private async Task BuscarUsuarioLogadoId()
    {
        UsuarioLogadoId = await sessao.BuscarIdDoUsuarioLogado();
    }

    private async Task BuscarUsuarioLogadoModel()
    {
        if (UsuarioLogadoId != Guid.Empty)
            UsuarioLogadoModel = await usuarioEndpoints.BuscarPorId(UsuarioLogadoId);
    }


}
